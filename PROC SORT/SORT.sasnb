[{"kind":1,"language":"markdown","value":"# PROC SORT EXAMPLES\r\n\r\n[Click to open PROC SORT documentation](https://go.documentation.sas.com/doc/en/pgmsascdc/default/proc/p1nd17xr6wof4sn19zkmid81p926.htm)","outputs":[]},{"kind":1,"language":"markdown","value":"### Generate data for examples\r\n\r\nExecute the following program to create the **CLASSTEST** table in the Work library.","outputs":[]},{"kind":2,"language":"sas","value":"data classtest;\r\n   infile datalines dsd;\r\n   input\r\n      Name :$7.\r\n      Subject :$7.\r\n      Score;\r\ndatalines4;\r\nJudy,Reading,91\r\nJudy,Math,79\r\nBarbara,Math,90\r\nBarbara,Reading,86\r\nBarbara,Math,90\r\nLouise,Math,72\r\nLouise,Reading,65\r\nWilliam,Math,61\r\nWilliam,Reading,71\r\nHenry,Math,62\r\nHenry,Reading,75\r\nHenry,Reading,84\r\nJane,Math,94\r\nJane,Reading,96\r\n;;;;\r\nrun;\r\n\r\ntitle \"CLASSTEST table to use for SORT examples\";\r\nproc print data=classtest;\r\nrun;\r\ntitle;","outputs":[]},{"kind":1,"language":"markdown","value":"### Create a sorted copy of a table\r\n\r\nThis program reads the **SASHELP.CLASSTEST** table, sorts rows by ascending **Name**, and then **Subject** within each Name. The sorted data is saved in a new table **WORK.CLASSTEST_SORT**. If you do not use the OUT= option, PROC SORT will sort the table named on the DATA= option if you have permission to update it. ","outputs":[]},{"kind":2,"language":"sas","value":"proc sort data=classtest out=classtest_sort;\r\n    by Name Subject;\r\nrun;\r\n\r\ntitle \"CLASSTEST_SORT table sorted by ascending Name and Subject\";\r\nproc print data=classtest_sort;\r\nrun;\r\ntitle;","outputs":[]},{"kind":1,"language":"markdown","value":"### Sort by groups and in descending order\r\n\r\nThis program reads **CLASSTEST**, sorts rows by **Subject** in ascending order, then within Subject by **Score** in descending order. The sorted data is saved in a new table **WORK.CLASSTEST_SORT**. Note that the keyword DESCENDING changes the order for the variable it precedes. ","outputs":[]},{"kind":2,"language":"sas","value":"proc sort data=classtest out=classtest_sort;\r\n    by Subject descending Score;\r\nrun;\r\n\r\ntitle \"CLASSTEST_SORT table sorted by descending Score within Subject\";\r\nproc print data=classtest_sort;\r\nrun;","outputs":[]},{"kind":1,"language":"markdown","value":"### Remove entirely duplicated rows\r\nThis program sorts rows by all columns so that duplicated rows will be sequential. The NODUPKEY option deletes rows with duplicate BY values, thus eliminating\r\n entirely duplicated rows.","outputs":[]},{"kind":2,"language":"sas","value":"proc sort data=classtest out=classtest_sort nodupkey;\r\n    by _all_;\r\nrun;\r\n\r\ntitle \"CLASSTEST_SORT table with duplicated rows removed\";\r\nproc print data=classtest_sort;\r\nrun;\r\n","outputs":[]},{"kind":1,"language":"markdown","value":"### Create an ordered list of unique values\r\nThis program generates a list of unique names by keeping only the **Name** column from the input table and using NODUPKEY to remove duplicate values of Name.  ","outputs":[]},{"kind":2,"language":"sas","value":"proc sort data=classtest(keep=Name) out=classtest_sort nodupkey;\r\n    by Name;\r\nrun;\r\n\r\ntitle \"CLASSTEST_SORT table keeping only Name and removing duplicates\";\r\nproc print data=classtest_sort;\r\nrun;","outputs":[]},{"kind":1,"language":"markdown","value":"### Retaining the first observation in each BY group\r\nThe first PROC SORT arranges rows by desending scores for each **Name** and **Subject**. The second PROC SORT keeps only the first occurance of each **Name** and **Subject** combination. Rows that are removed are saved to a separate table named **CLASSTEST_DUPS**.","outputs":[]},{"kind":2,"language":"sas","value":"proc sort data=classtest out=classtest_sort;\r\n    by Name Subject descending Score;\r\nrun;\r\n\r\nproc sort data=classtest_sort dupout=classtest_dups nodupkey;\r\n    by Name Subject;\r\nrun;\r\n\r\ntitle \"CLASSTEST_SORT table keeping the high Score for each Name and Subject\";\r\nproc print data=classtest_sort;\r\nrun;\r\n\r\ntitle \"CLASSTEST_DUPS table with the removed lower test scores\";\r\nproc print data=classtest_dups;\r\nrun;","outputs":[]}]